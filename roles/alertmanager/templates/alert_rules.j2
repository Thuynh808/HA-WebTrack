{% raw %}
groups:
  - name: alert_rules
    rules:

    # Rule 1: High CPU Usage Alert
    - alert: HighCPUUsage
      expr: 100 * (1 - avg by (instance) (rate(node_cpu_seconds_total{instance=~"192.168.68.9[1-3]:9100", mode="idle"}[5m]))) > 80
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: "High CPU usage detected on instance {{ $labels.instance }}"
        description: "CPU usage has been over 80% for the past 1 minute on {{ $labels.instance }}."

    # Rule 2: High Memory Usage Alert
    - alert: HighMemoryUsage
      expr: (node_memory_MemAvailable_bytes{instance=~"192.168.68.9[1-3]:9100"} / node_memory_MemTotal_bytes{instance=~"192.168.68.9[1-3]:9100"} * 100) < 20
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: "High memory usage detected on instance {{ $labels.instance }}"
        description: "Available memory is below 80% for the past 1 minute on {{ $labels.instance }}."

    # Rule 3: Instance Down Alert
    - alert: InstanceDown
      expr: up{instance=~"192.168.68.9[1-3]:9100"} == 0
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: "Instance down: {{ $labels.instance }}"
        description: "The instance at {{ $labels.instance }} is down for more than 1 minute."

    # Rule 4: High Request Rate on HAProxy
    - alert: HighRequestRate
      expr: rate(haproxy_frontend_http_requests_total{proxy="load_balancer"}[1m]) > 100
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: "High request rate on HAProxy instance {{ $labels.instance }}"
        description: "The request rate has exceeded 100 requests per second for 1 minutes on HAProxy at {{ $labels.instance }}."

{% endraw %}

